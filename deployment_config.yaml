apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: myapp-tekton
      app.kubernetes.io/part-of: integration-layer
    name: myapp-tekton
  spec:
    replicas: 1
    selector:
      app: myapp-tekton
      deploymentconfig: myapp-tekton
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: myapp-tekton
          deploymentconfig: myapp-tekton
      spec:
        containers:
        - env:
          - name: API_PORT
            value: "3000"
          - name: CDR_ASYNC_REQUEST_TIMEOUT
            value: "700"
          - name: CDR_SESSION_TIMEOUT
            value: "120"
          - name: CDR_SUMMARY
            value: http://localhost:3000/
          - name: GETCACHE_ENDPOINT
            value: http://backend-cacheservice-chatbot-test.apps.icp4app.jazz.com.pk/api/getCache/
          - name: GETJAZZTOKEN_ENDPOINT
            value: http://backend-jazzauth-chatbot-test.apps.icp4app.jazz.com.pk/api/getJazzToken/
          - name: GETKYCINFO_ENDPOINT
            value: http://backend-kycinfo-chatbot-test.apps.icp4app.jazz.com.pk/api/getKYCInfo/
          - name: JAZZ_CDR_ENDPOINT
            value: https://apimtest.jazz.com.pk/chatbot/cdr/
          - name: LOG_LEVEL
            value: info
          - name: RECHARGE_HISTORY_SUMMARY
            value: http://backend-rechargehistoryservice-chatbot-test.apps.icp4app.jazz.com.pk/
          - name: RESPONSE_OBJECT_TIMEOUT
            value: "30"
          - name: SETCACHE_ENDPOINT
            value: http://backend-cacheservice-chatbot-test.apps.icp4app.jazz.com.pk/api/setCache/
          - name: TZ
            value: Asia/Karachi
          image: image-registry.openshift-image-registry.svc:5000/myapp-tekton/myapp-tekton:latest
          name: myapp-tekton
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - myapp-tekton
        from:
          kind: ImageStreamTag
          name: myapp-tekton:latest
          namespace: chatbot
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: myapp-tekton
    name: myapp-tekton
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 3000
    selector:
      app: myapp-tekton
      deploymentconfig: myapp-tekton
  status:
    loadBalancer: {}
kind: List
metadata: {}